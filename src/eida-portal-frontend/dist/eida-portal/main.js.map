{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/console.service.ts","webpack:///./src/app/console/console.component.html","webpack:///./src/app/console/console.component.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/eida.service.ts","webpack:///./src/app/events/events.component.html","webpack:///./src/app/events/events.component.ts","webpack:///./src/app/map.service.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/models.ts","webpack:///./src/app/paginator.service.ts","webpack:///./src/app/request/request.component.html","webpack:///./src/app/request/request.component.ts","webpack:///./src/app/stations.service.ts","webpack:///./src/app/stations/stations.component.html","webpack:///./src/app/stations/stations.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<nav class=\\\"navbar is-light\\\">\\n  <div class=\\\"navbar-brand\\\">\\n    <a class=\\\"navbar-item\\\">\\n      <h1 class=\\\"title\\\">EIDA Portal</h1>\\n    </a>\\n    <div class=\\\"navbar-burger burger\\\" data-target=\\\"navbarExampleTransparentExample\\\">\\n      <span></span>\\n      <span></span>\\n      <span></span>\\n    </div>\\n  </div>\\n\\n  <div id=\\\"navbarExampleTransparentExample\\\" class=\\\"navbar-menu\\\">\\n    <div class=\\\"navbar-start\\\">\\n      <a class=\\\"navbar-item\\\">\\n        <span class=\\\"icon\\\">\\n          <i class=\\\"fas fa-home\\\"></i>\\n        </span>\\n        <span>\\n          Dashboard\\n        </span>\\n      </a>\\n      <div class=\\\"navbar-item has-dropdown is-hoverable\\\">\\n        <a class=\\\"navbar-link\\\">\\n          <span class=\\\"icon\\\">\\n            <i class=\\\"fas fa-compass\\\"></i>\\n          </span>\\n          <span>\\n            Menu\\n          </span>\\n        </a>\\n        <div class=\\\"navbar-dropdown is-boxed\\\">\\n          <a class=\\\"navbar-item\\\">\\n            Menu entry 1\\n          </a>\\n          <a class=\\\"navbar-item\\\">\\n            Menu entry 2\\n          </a>\\n          <hr class=\\\"navbar-divider\\\">\\n          <a class=\\\"navbar-item\\\">\\n            Menu entry 3\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"navbar-end\\\">\\n      <div class=\\\"navbar-item\\\">\\n        <div class=\\\"field is-grouped\\\">\\n          <p class=\\\"control\\\">\\n            <a class=\\\"bd-tw-button button\\\">\\n              <span class=\\\"icon\\\"><i class=\\\"fas fa-coffee\\\"></i></span>\\n              <span>\\n                Button 1\\n              </span>\\n            </a>\\n          </p>\\n          <p class=\\\"control\\\">\\n            <a class=\\\"button is-info\\\">\\n              <span class=\\\"icon\\\"><i class=\\\"fas fa-cog\\\"></i></span>\\n              <span>Button 2</span>\\n            </a>\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'eida-portal';\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { StationsComponent } from './stations/stations.component';\nimport { EventsComponent } from './events/events.component';\nimport { ConsoleComponent } from './console/console.component';\nimport { MapComponent } from './map/map.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RequestComponent } from './request/request.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StationsComponent,\n    EventsComponent,\n    ConsoleComponent,\n    MapComponent,\n    DashboardComponent,\n    RequestComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleService {\n  messages: string[] = [];\n\n  constructor() { }\n\n  add(message: string) {\n    this.messages.push(new Date().toLocaleString() + ' - ' + message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n\n  getMsgCount() {\n    return this.messages.length;\n  }\n}\n","module.exports = \"<button class=\\\"button is-danger is-outlined is-fullwidth\\\" (click)=\\\"consoleService.clear()\\\">Clear the console</button>\\n<table class=\\\"table table-sm table-striped\\\" width=\\\"100%\\\">\\n  <tbody>\\n    <tr *ngFor='let message of consoleService.messages'>\\n      <td>{{ message }}</td>\\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { ConsoleService } from '../console.service';\n\n@Component({\n  selector: 'app-console',\n  templateUrl: './console.component.html',\n})\nexport class ConsoleComponent implements OnInit {\n\n  constructor(public consoleService: ConsoleService) { }\n\n  ngOnInit() {\n    this.consoleService.add('Console initiated');\n  }\n\n}\n","module.exports = \"<style>\\n  input[type=\\\"radio\\\"],\\n    .tab-pane {\\n      display: none;\\n    }\\n  \\n    #stations:checked~.tab-content>.content-stations,\\n    #events:checked~.tab-content>.content-events,\\n    #request:checked~.tab-content>.content-request,\\n    #console:checked~.tab-content>.content-console {\\n      display: block;\\n    }\\n  </style>\\n\\n<div class=\\\"section\\\">\\n  <div class=\\\"tile is-ancestor\\\">\\n    <div class=\\\"tile is-6 is-vertical is-parent\\\">\\n      <!-- Nav tabs -->\\n      <input type=\\\"radio\\\" id=\\\"stations\\\" name=\\\"nav-tab\\\">\\n      <input type=\\\"radio\\\" id=\\\"events\\\" name=\\\"nav-tab\\\">\\n      <input type=\\\"radio\\\" id=\\\"request\\\" name=\\\"nav-tab\\\">\\n      <input type=\\\"radio\\\" id=\\\"console\\\" name=\\\"nav-tab\\\" checked=\\\"checked\\\">\\n\\n      <div class=\\\"tabs is-boxed is-fullwidth\\\">\\n        <ul>\\n          <li id=\\\"stationsTab\\\">\\n            <label for=\\\"stations\\\">\\n              <a (click)=\\\"tabSelected('#stationsTab')\\\">\\n                <span class=\\\"icon\\\"><i class=\\\"fas fa-globe-americas\\\"></i></span>\\n                <span>Stations</span>\\n              </a>\\n            </label>\\n          </li>\\n          <li id=\\\"eventsTab\\\">\\n            <label for=\\\"events\\\">\\n              <a (click)=\\\"tabSelected('#eventsTab')\\\">\\n                <span class=\\\"icon\\\"><i class=\\\"fas fa-map\\\"></i></span>\\n                <span>Events</span>\\n              </a>\\n            </label>\\n          </li>\\n          <li id=\\\"requestTab\\\">\\n            <label for=\\\"request\\\">\\n              <a (click)=\\\"tabSelected('#requestTab')\\\">\\n                <span class=\\\"icon\\\"><i class=\\\"fas fa-download\\\"></i></span>\\n                <span>Request</span>\\n              </a>\\n            </label>\\n          </li>\\n          <li class=\\\"is-active\\\" id=\\\"consoleTab\\\">\\n            <label for=\\\"console\\\">\\n              <a (click)=\\\"tabSelected('#consoleTab')\\\">\\n                <span class=\\\"icon\\\"><i class=\\\"fas fa-terminal\\\"></i></span>\\n                <span>Console ({{consoleService.getMsgCount()}})</span>\\n              </a>\\n            </label>\\n          </li>\\n        </ul>\\n      </div>\\n\\n      <!-- Tab panes -->\\n      <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane content-stations\\\">\\n          <div class=\\\"tile is-child\\\">\\n            <app-stations></app-stations>\\n          </div>\\n        </div>\\n        <div class=\\\"tab-pane content-events\\\">\\n          <div class=\\\"tile is-child\\\">\\n            <app-events></app-events>\\n          </div>\\n        </div>\\n        <div class=\\\"tab-pane content-request\\\">\\n          <app-request></app-request>\\n        </div>\\n        <div class=\\\"tab-pane content-console\\\">\\n          <app-console></app-console>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"tile is-parent\\\">\\n      <div class=\\\"tile is-child\\\">\\n        <app-map></app-map>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ConsoleService } from '../console.service';\n\ndeclare var jquery: any;\ndeclare var $: any;\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(public consoleService: ConsoleService) { }\n\n  ngOnInit() {\n    this.consoleService.add('Dashboard initiated');\n  }\n\n  tabSelected(s) {\n    $('li').removeClass('is-active');\n    $(s).addClass('is-active');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ConsoleService } from './console.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EidaService {\n\n  constructor(\n    public http: HttpClient,\n    private consoleService: ConsoleService\n  ) { }\n\n  public httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  public log(message: string) {\n    this.consoleService.add(`EidaService: ${message}`);\n  }\n\n  /**\n  * Handle Http operation that failed.\n  * Let the app continue.\n  * @param operation - name of the operation that failed\n  * @param result - optional value to return as the observable result\n  */\n  public handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"<div class=\\\"columns\\\">\\n  <div class=\\\"column is-5\\\">\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Catalog</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"select\\\">\\n            <select [(ngModel)]=\\\"eventsModel.selectedCatalog\\\">\\n              <option *ngFor=\\\"let c of eventsModel.catalogs\\\" [ngValue]=\\\"c\\\">{{c.name}}</option>\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label\\\">\\n        <label class=\\\"label\\\">Minimum magnitude</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"eventsModel.minimumMagnitude\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"0\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Date from</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"eventsModel.dateFrom\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"1\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Date to</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"eventsModel.dateTo\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"1\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Depth from</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"eventsModel.depthFrom\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"1\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Depth to</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"eventsModel.depthTo\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"1\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Coordinate (N)</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"eventsModel.coordinateN\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"1\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Coordinate (S)</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"eventsModel.coordinateS\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"1\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Coordinate (E)</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"eventsModel.coordinateE\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"1\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Coordinate (W)</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"eventsModel.coordinateW\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"1\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column is-half\\\">\\n        <span class=\\\"button is-danger is-fullwidth\\\" (click)=\\\"reset();\\\">Reset</span>\\n      </div>\\n      <div class=\\\"column is-half\\\">\\n        <span class=\\\"button is-success is-fullwidth\\\" (click)=\\\"search();\\\">Search</span>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"column\\\">\\n    <article class=\\\"message is-info\\\">\\n      <div class=\\\"message-body\\\">\\n        Selected events will appear here.\\n      </div>\\n    </article>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ConsoleService } from '../console.service';\nimport { EventsModel } from '../models'\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n})\nexport class EventsComponent implements OnInit {\n  @Input() eventsModel = new EventsModel();\n\n  constructor(public consoleService: ConsoleService) { }\n\n  ngOnInit() {\n    this.consoleService.add('Events initiated');\n  }\n\n  search() {\n    this.consoleService.add('Events/search clicked >>> ' + this.eventsModel.toString());\n  }\n\n  reset() {\n    this.eventsModel = new EventsModel();\n    this.consoleService.add('Events/reset clicked');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { EidaService } from './eida.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n  constructor(private eidaService: EidaService) { }\n}\n","module.exports = \".ol-popup {\\n  position: absolute;\\n  background-color: white;\\n  -webkit-filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));\\n  filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));\\n  padding: 15px;\\n  border-radius: 10px;\\n  border: 1px solid #cccccc;\\n  bottom: 12px;\\n  left: -50px;\\n  width: 300px;\\n}\\n\\n.ol-popup:after,\\n.ol-popup:before {\\n  top: 100%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.ol-popup:after {\\n  border-top-color: white;\\n  border-width: 10px;\\n  left: 48px;\\n  margin-left: -10px;\\n}\\n\\n.ol-popup:before {\\n  border-top-color: #cccccc;\\n  border-width: 11px;\\n  left: 48px;\\n  margin-left: -11px;\\n}\\n\\n.ol-popup-closer {\\n  text-decoration: none;\\n  position: absolute;\\n  top: 2px;\\n  right: 8px;\\n}\\n\\n.ol-popup-closer:after {\\n  content: \\\"✖\\\";\\n}\\n\"","module.exports = \"<div id=\\\"map\\\" class=\\\"map\\\">\\n  <div id=\\\"popup\\\" class=\\\"ol-popup\\\">\\n    <a id=\\\"popup-closer\\\" class=\\\"ol-popup-closer\\\"></a>\\n    <div id=\\\"popup-content\\\"></div>\\n  </div>\\n</div>\\n<div style=\\\"margin-top: 5px\\\">\\n  <button class=\\\"button is-fullwidth\\\" (click)=\\\"resetMapZoom()\\\">Reset map zoom</button>\\n</div>\"","import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Map, View, Overlay } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport { MapService } from '../map.service';\nimport { StationsService } from '../stations.service';\nimport { ConsoleService } from '../console.service';\nimport { projection } from '@angular/core/src/render3/instructions';\nimport { \n  StationsModel, FdsnNetwork, FdsnStationExt\n } from '../models';\nimport { switchMap } from 'rxjs/operators';\nimport { and } from '@angular/router/src/utils/collection';\n\ndeclare var jquery: any;\ndeclare var $: any;\ndeclare var ol: any;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  private _map: any;\n  private _vectorSource = new ol.source.Vector({\n    features: []\n  });\n  private vectorLayer = new ol.layer.Vector({\n    source: this._vectorSource\n  });\n  stationsModel: StationsModel;\n\n  constructor(\n    private mapService: MapService,\n    private stationsService: StationsService,\n    public consoleService: ConsoleService) { }\n\n  ngOnInit() {\n    this._map = new ol.Map({\n      target: document.getElementById('map'),\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM({\n            \"url\" : \"https://maps-cdn.salesboard.biz/styles/klokantech-3d-gl-style/{z}/{x}/{y}.png\"\n          })\n        }), this.vectorLayer\n      ],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([5.178029, 52.101568]),\n        zoom: 2\n      })\n    });\n    let popupContainer = document.getElementById('popup');\n    let popupContent = document.getElementById('popup-content');\n    let popupCloser = document.getElementById('popup-closer');\n    let popupOverlay = new ol.Overlay({\n      element: popupContainer\n    });\n    this._map.addOverlay(popupOverlay);\n\n    this._map.on('click', function (e) {\n      let feature = e.map.forEachFeatureAtPixel(e.pixel,\n        function (feature) {\n          return feature;\n        });\n      if (feature) {\n        let coordinates = feature.getGeometry().getCoordinates();\n        popupOverlay.setPosition(coordinates);\n        popupContent.innerHTML = feature.get('name');\n      } else {\n        popupCloser.click();\n      }\n    });\n\n    popupCloser.onclick = function () {\n      popupOverlay.setPosition(undefined);\n      popupCloser.blur();\n      return false;\n    };\n\n    // change mouse cursor when over marker\n    this._map.on('pointermove', function (e) {\n      if (e.dragging) {\n        // $(element).popover('dispose');\n        return;\n      }\n      var pixel = e.map.getEventPixel(e.originalEvent);\n      var hit = e.map.hasFeatureAtPixel(pixel);\n      e.map.getTarget().style.cursor = hit ? 'pointer' : '';\n    });\n\n    // Subscribe to the service to get model changes from the stations component\n    this.stationsService.selectedStations.subscribe(\n      s => this.updateStationsMap(s)\n    );\n    this.stationsService.focuedStation.subscribe(\n      s => this.focusStation(s)\n    );\n    this.consoleService.add('Map initiated');\n  }\n\n  updateStationsMap(stations: FdsnStationExt[]) {\n    this.removeStationMarkers();\n\n    for (let s of stations) {\n      var point = new ol.Feature({\n        geometry: new ol.geom.Point(\n          ol.proj.fromLonLat([+s.lon, +s.lat])\n        ),\n        name: `<b>Network:</b> ${s.net}<br><b>Station:</b> ${s.stat}<br><b>Name:</b> ${s.name}`\n      });\n\n      point.setStyle(new ol.style.Style({\n        image: new ol.style.Icon({\n          src: (s.selected ? \"../../assets/img/markers/triangle-green.png\" : \"../../assets/img/markers/triangle-grey.png\")\n        })\n      })), this._vectorSource.addFeature(point);\n    }\n  }\n\n  focusStation(s: FdsnStationExt) {\n    this._map.getView().animate({\n      center: ol.proj.fromLonLat([+s.lon, +s.lat]),\n      duration: 1000,\n      zoom: 13\n    })\n  }\n\n  resetMapZoom() {\n    this._map.getView().animate({\n      center: ol.proj.fromLonLat([5.178029, 52.101568]),\n      duration: 1000,\n      zoom: 2\n    })\n  }\n\n  removeStation(s: FdsnStationExt): void {\n    console.log(s.stat);\n  }\n\n  toggleStationSelection(s): void {\n    console.log(s);\n  }\n\n  removeStationMarkers(): void {\n    this._vectorSource.clear();\n  }\n\n}\n","export class StationsModel {\n    yearFrom: string;\n    yearTo: string;\n    coordinateN: number;\n    coordinateS: number;\n    coordinateE: number;\n    coordinateW: number;\n    selectedNetwork;\n    selectedStation;\n\n    constructor() {\n        this.yearFrom = \"1900\";\n        this.yearTo = \"2100\";\n        this.coordinateN = 90.0;\n        this.coordinateS = -90.0;\n        this.coordinateE = 180.0;\n        this.coordinateW = -180.0;\n        this.selectedNetwork = 'All';\n        this.selectedStation = 'All';\n    }\n\n    toString() {\n        return `Year: ${this.yearFrom} - ${this.yearTo}, \n        coordinates: ${this.coordinateN}N, ${this.coordinateS}S, ${this.coordinateE}E, ${this.coordinateW}W,\n        network: ${this.selectedNetwork.code}, station: ${this.selectedStation.stat}`;\n    }\n}\n\nexport class EventsModel {\n    catalogs: {};\n    minimumMagnitude: number;\n    dateFrom: string;\n    dateTo: string;\n    depthFrom: number;\n    depthTo: number;\n    coordinateN: number;\n    coordinateS: number;\n    coordinateE: number;\n    coordinateW: number;\n    selectedCatalog;\n\n    constructor() {\n        this.catalogs = [\n            {'id':0, 'name': \"EIDA\"},\n            {'id':1, 'name': \"IRIS\"}\n        ];\n        this.minimumMagnitude = 0.0;\n        this.dateFrom = \"2017-01-01\";\n        this.dateTo = \"2018-01-01\";\n        this.depthFrom = 0;\n        this.depthTo = 999;\n        this.coordinateN = 90.0;\n        this.coordinateS = -90.0;\n        this.coordinateE = 180.0;\n        this.coordinateW = -180.0;\n        this.selectedCatalog = this.catalogs[0];\n    }\n\n    toString() {\n        return `Catalog: ${this.selectedCatalog.name},\n        minimum magnitude: ${this.minimumMagnitude},\n        date: ${this.dateFrom} - ${this.dateTo},\n        depth: ${this.depthFrom} - ${this.depthTo},\n        coordinates: ${this.coordinateN}N, ${this.coordinateS}S, ${this.coordinateE}E, ${this.coordinateW}W`;\n    }\n}\n\nexport class MapModel {\n\n}\n\nexport class RequestModel {\n    datetimeFrom: string;\n    datetimeTo: string;\n    fdsnRequestType: {};\n    selectedFdsnRequestType;\n\n    constructor() {\n        this.datetimeFrom = \"2017-01-01T12:00:00\";\n        this.datetimeTo = \"2018-01-01T12:00:00\";\n        this.fdsnRequestType = [\n            {'id': 0, 'name': 'Waveform (Mini-SEED)'},\n            {'id': 1, 'name': 'Metadata (StationXML)'},\n            {'id': 2, 'name': 'Metadata (Text)'}\n        ];\n        this.selectedFdsnRequestType = this.fdsnRequestType[0];\n    }\n\n    toString() {\n        return `Datetime: ${this.datetimeFrom} - ${this.datetimeTo},\n        request type: ${this.selectedFdsnRequestType.name}`;\n    }\n}\n\nexport class FdsnNetwork {\n    code: string;\n    desc: string;\n    start: string;\n    end: string;\n    stations: FdsnStation[];\n\n    constructor() {\n        this.code = 'ALL';\n        this.desc = 'ALL';\n        this.start = '';\n        this.end = '';\n        this.stations = [];\n    }\n}\n\nexport class FdsnStation {\n    net: string;\n    stat: string;\n    lat: string;\n    lon: string;\n    elev: string;\n    name: string;\n    start: string;\n    end: string;\n\n    constructor() {\n        this.net = 'ALL';\n        this.stat = 'ALL';\n        this.lat = '0.0';\n        this.lon = '0.0';\n        this.elev = '0.0';\n        this.name = 'All stations';\n        this.start = '';\n        this.end = '';\n    }\n}\n\nexport class FdsnStationExt extends FdsnStation {\n    selected: boolean;\n\n    constructor() {\n        super();\n        this.selected = true;\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaginatorService {\n  private _currentPage: number = 0;\n  private _pageSize: number = 15;\n  private _pages = new Array();\n\n  constructor() { }\n\n  paginate(data) {\n    this._pages = new Array();\n    for (let i = 0; i < data.length; i += this._pageSize) {\n      var tmpSlice = data.slice(i, i + this._pageSize);\n      if (tmpSlice.length > 0) {\n        this._pages.push(tmpSlice);\n      }\n    }\n  }\n\n  getTotalPages() {\n    return this._pages.length;\n  }\n\n  getPages() {\n    return this._pages;\n  }\n\n  getPage(i: number) {\n    this._currentPage = i;\n    return this._pages[i];\n  }\n\n  getCurrentPage() {\n    return this._pages[this._currentPage];\n  }\n\n  getCurrentPageNumber(): number {\n    return this._currentPage + 1;\n  }\n\n  getPreviousPageNumber(): number {\n    return this.getCurrentPageNumber() - 1;\n  }\n\n  getNextPageNumber(): number {\n    return this.getCurrentPageNumber() + 1;\n  }\n\n  getLastPageNumber(): number {\n    return this._pages.length;\n  }\n\n  getNextPage() {\n    if (this._currentPage < this._pages.length - 1) {\n      this._currentPage++;\n    }\n    return this._pages[this._currentPage];\n  }\n\n  getPreviousPage() {\n    if (this._currentPage > 0) {\n      this._currentPage--;\n    }\n    return this._pages[this._currentPage];\n  }\n\n  getFirstPage() {\n    this._currentPage = 0;\n    return this._pages[this._currentPage];\n  }\n\n  getLastPage() {\n    this._currentPage = this._pages.length - 1;\n    return this._pages[this._currentPage];\n  }\n\n  nextPageExists() {\n    return this._currentPage < this._pages.length - 1;\n  }\n\n  previousPageExists() {\n    return this._currentPage > 0;\n  }\n}\n","module.exports = \"<div class=\\\"field\\\">\\n  <label class=\\\"label\\\">Datetime from</label>\\n  <div class=\\\"control\\\">\\n    <input [(ngModel)]=\\\"requestModel.datetimeFrom\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"YYYY-MM-DDTHH:MM:SS\\\">\\n  </div>\\n  <p class=\\\"help\\\">Example: \\\"2017-01-01T12:00:00\\\"</p>\\n</div>\\n\\n<div class=\\\"field\\\">\\n  <label class=\\\"label\\\">Datetime to</label>\\n  <div class=\\\"control\\\">\\n    <input [(ngModel)]=\\\"requestModel.datetimeTo\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"YYYY-MM-DDTHH:MM:SS\\\">\\n  </div>\\n  <p class=\\\"help\\\">Example: \\\"2018-01-01T12:00:00\\\"</p>\\n</div>\\n\\n<div class=\\\"field is-horizontal\\\">\\n  <div class=\\\"field-label is-normal\\\">\\n    <label class=\\\"label\\\">FDSN request type</label>\\n  </div>\\n  <div class=\\\"field-body\\\">\\n    <div class=\\\"field\\\">\\n      <div class=\\\"select\\\">\\n        <select [(ngModel)]=\\\"requestModel.selectedFdsnRequestType\\\">\\n          <option *ngFor=\\\"let t of requestModel.fdsnRequestType\\\" [ngValue]=\\\"t\\\">{{t.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"columns\\\">\\n  <div class=\\\"column is-half\\\">\\n    <span class=\\\"button is-info is-fullwidth\\\" (click)=\\\"review();\\\">Review</span>\\n  </div>\\n  <div class=\\\"column is-half\\\">\\n    <span class=\\\"button is-success is-fullwidth\\\" (click)=\\\"submit();\\\">Submit</span>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ConsoleService } from '../console.service';\nimport { RequestModel } from '../models'\n\n@Component({\n  selector: 'app-request',\n  templateUrl: './request.component.html',\n})\nexport class RequestComponent implements OnInit {\n  @Input() requestModel = new RequestModel();\n\n  constructor(public consoleService: ConsoleService) { }\n\n  ngOnInit() {\n    this.consoleService.add('Request initiated');\n  }\n\n  review() {\n    this.consoleService.add('Request/review clicked');\n  }\n\n  submit() {\n    this.consoleService.add('Request/submit clicked >>> ' + this.requestModel.toString());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { EidaService } from './eida.service';\nimport { FdsnNetwork, FdsnStation, FdsnStationExt, StationsModel } from './models';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StationsService {\n  public allNetworks: FdsnNetwork[];\n  public allStations = new Array<FdsnStationExt>();\n  public selectedStations = new Subject<FdsnStationExt[]>();\n  public focuedStation = new Subject<FdsnStationExt>();\n  private _mapStations = new Array<FdsnStationExt>();\n\n  constructor(\n    private eidaService: EidaService\n  ) { }\n\n  private networksUrl = environment.networksUrl;\n  private stationsUrl = environment.stationsUrl;\n  private networksStationsUrl = environment.networksStationsUrl;\n\n  addAllStations(fs: FdsnStation[]) {\n    for (let f of fs) {\n      let tmp = new FdsnStationExt();\n      tmp.net = f.net;\n      tmp.stat = f.stat;\n      tmp.lat = f.lat;\n      tmp.lon = f.lon;\n      tmp.elev = f.elev;\n      tmp.name = f.name;\n      tmp.start = f.start;\n      tmp.end = f.end;\n      tmp.selected = true;\n      this.allStations.push(tmp);\n    }\n  }\n\n  updateStations(s: FdsnStationExt[]) {\n    this.selectedStations.next(s);\n  }\n\n  updateFocusedStation(s: FdsnStationExt) {\n    this.focuedStation.next(s);\n  }\n\n  getNetworks(): Observable<FdsnNetwork[]> {\n    return this.eidaService.http.get<FdsnNetwork[]>(this.networksUrl)\n      .pipe(\n        tap(_ => this.eidaService.log('fetched networks data')),\n        catchError(this.eidaService.handleError('getNetworks', []))\n      );\n  }\n\n  getStations(): Observable<FdsnStation[]> {\n    return this.eidaService.http.get<FdsnStation[]>(this.stationsUrl)\n      .pipe(\n        tap(_ => this.eidaService.log('fetched stations data')),\n        catchError(this.eidaService.handleError('getStations', []))\n      );\n  }\n\n  // Add selected station(s) to map and notify subscribers\n  addSelectedStation(s: StationsModel) {\n    if (s.selectedNetwork === 'All' && s.selectedStation === 'All') {\n      this._mapStations = this.allStations;\n    } else if (s.selectedStation !== 'All'\n      && !this._mapStations.find(\n        m => m.net === s.selectedStation.net && m.stat === s.selectedStation.stat)) {\n      this._mapStations.push(s.selectedStation);\n    } else {\n      for (let st of this.allStations.filter(m => m.net === s.selectedNetwork.code)) {\n        if (!this._mapStations.find(x => x.net === st.net && x.stat === st.stat)) {\n          this._mapStations.push(st);\n        }\n      }\n    }\n    this.updateStations(this._mapStations);\n  }\n\n  toggleStationSelection(s: FdsnStationExt) {\n    this._mapStations.find(\n      p => p.net === s.net && p.stat === s.stat\n    ).selected = !s.selected;\n    this.updateStations(this._mapStations);\n  }\n\n  removeStationSelection(s: FdsnStation) {\n    let i = this._mapStations.indexOf(\n      this._mapStations.find(p => p.net === s.net && p.stat === s.stat)\n    );\n    this._mapStations.splice(i, 1);\n    this.updateStations(this._mapStations);\n  }\n\n  removeAllStations() {\n    this._mapStations.splice(0, this._mapStations.length);\n    this.updateStations(this._mapStations);\n  }\n\n  searchNetwork(term: string): Observable<FdsnNetwork[]> {\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.eidaService.http.get<FdsnNetwork[]>(this.networksUrl)\n      .pipe(\n        tap(_ => this.eidaService.log(`found heroes matching \"${term}\"`)),\n        catchError(this.eidaService.handleError<FdsnNetwork[]>('searchNetwork', []))\n      );\n  }\n\n  getNetworksStations(): Observable<FdsnNetwork[]> {\n    return this.eidaService.http.get<FdsnNetwork[]>(this.networksStationsUrl)\n      .pipe(\n        tap(_ => this.eidaService.log('fetched networks and stations data')),\n        catchError(this.eidaService.handleError('getNetworksStations', []))\n      );\n  }\n\n}","module.exports = \"<div class=\\\"columns\\\">\\n  <div class=\\\"column is-5\\\">\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Year from</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"stationsModel.yearFrom\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"1980\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Year to</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"stationsModel.yearTo\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"2018\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Network type</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <div class=\\\"select\\\">\\n          <select [(ngModel)]=\\\"stationsModel.selectedNetworkType\\\">\\n            <option *ngFor=\\\"let t of stationsModel.networkTypes\\\" [ngValue]=\\\"t\\\">{{t.name}}</option>\\n          </select>\\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\\n\\n    <!-- <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Network search</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <div class=\\\"control\\\">\\n          <input #searchBox id=\\\"search-network\\\" (keyup)=\\\"search_network(searchBox.value)\\\" class=\\\"input\\\" type=\\\"text\\\">\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <span *ngFor=\\\"let n of networks_search$ | async\\\" class=\\\"tag\\\">\\n    {{ n.code }} ({{ n.start }})\\n  </span> -->\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Network</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"select\\\">\\n            <select [(ngModel)]=\\\"stationsModel.selectedNetwork\\\" (ngModelChange)=\\\"networkChanged($event)\\\" style=\\\"width:100%;\\\">\\n              <option selected>All</option>\\n              <option *ngFor=\\\"let n of stationsService.allNetworks\\\" [ngValue]=\\\"n\\\">{{n.code}} - ({{n.start}}) -\\n                {{n.desc}}</option>\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Station</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"select\\\">\\n            <select [(ngModel)]=\\\"stationsModel.selectedStation\\\" (ngModelChange)=\\\"stationChanged($event)\\\" style=\\\"width:100%;\\\">\\n              <option selected>All</option>\\n              <option *ngFor=\\\"let s of filteredStations\\\" [ngValue]=\\\"s\\\">{{s.stat}} - {{s.name}} ({{s.start}})</option>\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Coordinate (N)</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"stationsModel.coordinateN\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"90\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Coordinate (S)</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"stationsModel.coordinateS\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"-90\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Coordinate (E)</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"stationsModel.coordinateE\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"180\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Coordinate (W)</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input [(ngModel)]=\\\"stationsModel.coordinateW\\\" class=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"-180\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column is-half\\\">\\n        <button class=\\\"button is-danger is-fullwidth\\\" (click)=\\\"reset();\\\">Reset</button>\\n      </div>\\n      <div class=\\\"column is-half\\\">\\n        <button class=\\\"button is-success is-fullwidth\\\" (click)=\\\"add();\\\">Add</button>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"paginator.getTotalPages() > 0\\\">\\n      <button class=\\\"button is-warning is-fullwidth\\\" (click)=\\\"removeAllStations();\\\">Remove all stations ({{\\n        selectedStations.length }})</button>\\n    </div>\\n  </div>\\n  <!-- List of stations -->\\n  <div class=\\\"column\\\">\\n    <article *ngIf=\\\"paginator.getTotalPages() === 0\\\" class=\\\"message is-info\\\">\\n      <div class=\\\"message-body\\\">\\n        Selected stations will appear here.\\n      </div>\\n    </article>\\n    <div *ngIf=\\\"paginator.getTotalPages() > 0\\\">\\n      <nav class=\\\"pagination is-right\\\" role=\\\"navigation\\\" aria-label=\\\"pagination\\\">\\n        <a class=\\\"pagination-previous\\\" id=\\\"previousPageButton\\\" (click)=\\\"paginator.getPreviousPage()\\\" [attr.disabled]=\\\"paginator.previousPageExists() ? null : true\\\">Previous</a>\\n        <a class=\\\"pagination-next\\\" id=\\\"nextPageButton\\\" (click)=\\\"paginator.getNextPage()\\\" [attr.disabled]=\\\"paginator.nextPageExists() ? null : true\\\">Next</a>\\n        <ul class=\\\"pagination-list\\\">\\n          <li><a *ngIf=\\\"paginator.previousPageExists()\\\" class=\\\"pagination-link\\\" aria-label=\\\"Goto page 1\\\" (click)=\\\"paginator.getFirstPage()\\\">1</a></li>\\n          <li><span *ngIf=\\\"paginator.previousPageExists()\\\" class=\\\"pagination-ellipsis\\\">&hellip;</span></li>\\n          <!-- <li><a *ngIf=\\\"paginator.previousPageExists()\\\" class=\\\"pagination-link\\\" aria-label=\\\"Goto page 45\\\">45</a></li> -->\\n          <li><a class=\\\"pagination-link is-current\\\" aria-label=\\\"Page 46\\\" aria-current=\\\"page\\\">{{paginator.getCurrentPageNumber()}}</a></li>\\n          <!-- <li><a *ngIf=\\\"paginator.nextPageExists()\\\" class=\\\"pagination-link\\\" aria-label=\\\"Goto page 47\\\">47</a></li> -->\\n          <li><span *ngIf=\\\"paginator.nextPageExists()\\\" class=\\\"pagination-ellipsis\\\">&hellip;</span></li>\\n          <li><a *ngIf=\\\"paginator.nextPageExists()\\\" class=\\\"pagination-link\\\" aria-label=\\\"Goto page 86\\\" (click)=\\\"paginator.getLastPage()\\\">{{paginator.getLastPageNumber()}}</a></li>\\n        </ul>\\n      </nav>\\n      <hr>\\n      <table class=\\\"table is-fullwidth\\\" id=\\\"stationsTable\\\">\\n        <tbody>\\n          <tr *ngFor=\\\"let station of paginator.getCurrentPage()\\\">\\n            <td>\\n              <a (click)=\\\"focusOnStation(station)\\\">{{station.net}} / {{station.stat}}</a>\\n              <p class=\\\"is-size-7\\\">{{station.name}}</p>\\n            </td>\\n            <td>\\n              <button style=\\\"width: 100%;\\\" (click)=\\\"stationsService.toggleStationSelection(station)\\\" [ngClass]=\\\"station.selected ? 'button is-small is-success' : 'button is-small is-light'\\\">\\n                {{station.selected ? \\\"Selected\\\" : \\\"Skipped\\\"}}</button>\\n            </td>\\n            <td>\\n              <button style=\\\"width: 100%\\\" (click)=\\\"stationsService.removeStationSelection(station)\\\" class=\\\"button is-small is-danger is-inverted\\\">Remove</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n    </div>\\n  </div>\\n  <!-- /List of stations -->\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport {\n  debounceTime, distinctUntilChanged, switchMap\n} from 'rxjs/operators';\n\nimport { StationsModel } from '../models';\nimport { ConsoleService } from '../console.service';\nimport { StationsService } from '../stations.service';\nimport { FdsnNetwork, FdsnStationExt } from '../models';\nimport { PaginatorService } from '../paginator.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-stations',\n  templateUrl: './stations.component.html',\n})\nexport class StationsComponent implements OnInit {\n  @Input() stationsModel = new StationsModel();\n  \n  filteredStations: FdsnStationExt[];\n  selectedStations = new Array<FdsnStationExt>();\n  networks_search$: Observable<FdsnNetwork[]>;\n  paginator = new PaginatorService();\n  private searchTerms = new Subject<string>();\n\n  constructor(\n    private stationsService: StationsService,\n    public consoleService: ConsoleService) { }\n\n  ngOnInit() {\n    this.stationsService.getNetworks().subscribe(\n      n => this.stationsService.allNetworks = n\n    );\n    this.stationsService.getStations().subscribe(\n      s => this.stationsService.addAllStations(s)\n    );\n\n    this.consoleService.add('Stations initiated');\n\n    this.networks_search$ = this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.stationsService.searchNetwork(term)),\n    );\n\n    this.stationsService.selectedStations.subscribe(\n      s => this.updateSelectedStationsTable(s)\n    );\n  }\n\n  search_network(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  allNetworks(): void {\n    this.stationsModel.selectedNetwork = new FdsnNetwork();\n  }\n\n  allStations(): void {\n    this.stationsModel.selectedNetwork = new FdsnNetwork();\n    this.stationsModel.selectedStation = new FdsnStationExt();\n    this.filteredStations = this.stationsService.allStations;\n  }\n\n  networkChanged(n) {\n    if (n === 'All') {\n      this.filteredStations = this.stationsService.allStations;\n    } else {\n      this.stationsModel.selectedNetwork = n;\n      this.filteredStations = this.stationsService.allStations.filter(\n        s => s.net === n.code\n      );\n    }\n  }\n\n  updateSelectedStationsTable(s: FdsnStationExt[]) {\n    this.selectedStations = s;\n    this.refreshPaginator();\n  }\n\n  focusOnStation(s: FdsnStationExt) {\n    this.stationsService.updateFocusedStation(s);\n  }\n\n  stationChanged(s) {\n    this.stationsModel.selectedStation = s;\n  }\n\n  add() {\n    this.stationsService.addSelectedStation(this.stationsModel);\n  }\n\n  reset(): void {\n    this.stationsModel = new StationsModel();\n  }\n\n  removeAllStations(): void {\n    this.stationsService.removeAllStations();\n  }\n\n  refreshPaginator(): void {\n    this.paginator.paginate(this.selectedStations);\n    this.paginator.getPages();\n    // $('#previousPageButton').attr('disabled', true);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  networksUrl:  'http://127.0.0.1:49160/n',\n  stationsUrl: 'http://127.0.0.1:49160/s',\n  networksStationsUrl: 'http://127.0.0.1:49160/ns'\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}